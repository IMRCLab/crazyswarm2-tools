---
# general settings
data_dir: logs
# data_file: log129
info_dir: info
event_name: fixedFrequency
start_time: # s
end_time: # s (not in use currently)
output_dir: reports
figures_max:
skip_data:
- timestamp

# title settings
title_settings:
- data_dir
# - data_file
- start_time
- end_time

# results settings
errors: 
- "L2 integral error"
- "L2 mean"
- "L2 std"
- "L2 max"

# figure settings
figures:
- title: UAV Positions 
  type: 2d subplots
  marker: line
  marker_kwargs:
    linewidth: 0.5
  structure:
  - x_axis: [timestamp, timestamp, timestamp]
    y_axis: [locSrv.x, stateEstimateZ.x, ctrltargetZ.x]
    legend: [mocap, ekf, desired]
    x_label: "$t [s]$"
    y_label: "$x [m]$"
  - x_axis: [timestamp, timestamp, timestamp]
    y_axis: [locSrv.y, stateEstimateZ.y, ctrltargetZ.y]
    legend: [mocap, ekf, desired]
    x_label: "$t [s]$"
    y_label: "$y [m]$"
  - x_axis: [timestamp, timestamp, timestamp]
    y_axis: [locSrv.z, stateEstimateZ.z, ctrltargetZ.z]
    legend: [mocap, ekf, desired]
    x_label: "$t [s]$"
    y_label: "$z [m]$"
- title: UAV Translational Velocities
  type: 2d subplots
  marker: line
  marker_kwargs:
    linewidth: 0.5
  structure:
  - x_axis: [timestamp, timestamp]
    y_axis: [stateEstimateZ.vx, ctrltargetZ.vx]
    legend: [ekf, desired]
    x_label: "$t [s]$"
    y_label: "$\\dot x [m/s]$"
  - x_axis: [timestamp, timestamp]
    y_axis: [stateEstimateZ.vy, ctrltargetZ.vy]
    legend: [ekf, desired]
    x_label: "$t [s]$"
    y_label: "$\\dot y [m/s]$"
  - x_axis: [timestamp, timestamp]
    y_axis: [stateEstimateZ.vz, ctrltargetZ.vz]
    legend: [ekf, desired]
    x_label: "$t [s]$"
    y_label: "$\\dot z [m/s]$"
- title: UAV Translational Accelerations
  type: 2d subplots
  marker: line
  marker_kwargs:
    linewidth: 0.5
  structure:
  - x_axis: [timestamp]
    y_axis: [acc.x]
    legend: [ekf]
    x_label: "$t [s]$"
    y_label: "$\\ddot x [m/s^2]$"
  - x_axis: [timestamp]
    y_axis: [acc.y]
    legend: [ekf]
    x_label: "$t [s]$"
    y_label: "$\\ddot y [m/s^2]$"
  - x_axis: [timestamp]
    y_axis: [acc.z]
    legend: [ekf]
    x_label: "$t [s]$"
    y_label: "$\\ddot z [m/s^2]$"
- title: UAV Angles (rpy)
  type: 2d subplots
  marker: line
  marker_kwargs:
    linewidth: 0.5
  structure:
  - x_axis: [timestamp, timestamp]
    y_axis: [ctrlLee.rpyx, ctrlLee.rpydx]
    legend: [actual, desired]
    x_label: "$t [s]$"
    y_label: "$\\phi [°]$"
  - x_axis: [timestamp, timestamp]
    y_axis: [ctrlLee.rpyy, ctrlLee.rpydy]
    legend: [actual, desired]
    x_label: "$t [s]$"
    y_label: "$\\theta [°]$"
  - x_axis: [timestamp, timestamp]
    y_axis: [ctrlLee.rpyz, ctrlLee.rpydz]
    legend: [actual, desired]
    x_label: "$t [s]$"
    y_label: "$\\psi [°]$"
- title: UAV Angular Velocities (rpy)
  type: 2d subplots
  marker: line
  marker_kwargs:
    linewidth: 0.5
  structure:
  - x_axis: [timestamp, timestamp]
    y_axis: [ctrlLee.omegax, ctrlLee.omegarx]
    legend: [actual, desired]
    x_label: "$t [s]$"
    y_label: "$\\dot \\phi [°/s]$"
  - x_axis: [timestamp, timestamp]
    y_axis: [ctrlLee.omegay, ctrlLee.omegary]
    legend: [actual, desired]
    x_label: "$t [s]$"
    y_label: "$\\dot \\theta [°/s]$"
  - x_axis: [timestamp, timestamp]
    y_axis: [ctrlLee.omegaz, ctrlLee.omegarz]
    legend: [actual, desired]
    x_label: "$t [s]$"
    y_label: "$\\dot \\psi [°/s]$"
- title: Payload Positions
  type: 2d subplots
  marker: line
  marker_kwargs:
    # marker: o
    # ms: 0.7
    linewidth: 0.5
  structure:
  - x_axis: [fitTimestamp, timestamp]
    y_axis: [fitZ.px, stateEstimateZ.px]
    legend: [fitted, ekf]
    x_label: "$t [s]$"
    y_label: "$x [m]$"
  - x_axis: [fitTimestamp, timestamp]
    y_axis: [fitZ.py, stateEstimateZ.py]
    legend: [fitted, ekf]
    x_label: "$t [s]$"
    y_label: "$y [m]$"
  - x_axis: [fitTimestamp, timestamp]
    y_axis: [fitZ.pz, stateEstimateZ.pz]
    legend: [fitted, ekf]
    x_label: "$t [s]$"
    y_label: "$z [m]$"
- title: Payload Translational Velocities
  type: 2d subplots
  marker: line
  marker_kwargs:
    # marker: o
    # ms: 0.7
    linewidth: 0.5
  structure:
  - x_axis: [fitTimestamp, timestamp]
    y_axis: [fitZ.pvx, stateEstimateZ.pvx]
    legend: [fitted, ekf]
    x_label: "$t [s]$"
    y_label: "$\\dot x [m/s]$"
  - x_axis: [fitTimestamp, timestamp]
    y_axis: [fitZ.pvy, stateEstimateZ.pvy]
    legend: [fitted, ekf]
    x_label: "$t [s]$"
    y_label: "$\\dot y [m/s]$"
  - x_axis: [fitTimestamp, timestamp]
    y_axis: [fitZ.pvz, stateEstimateZ.pvz]
    legend: [fitted, ekf]
    x_label: "$t [s]$"
    y_label: "$\\dot z [m/s]$"
- title: Payload Translational Accelerations
  type: 2d subplots
  marker: line
  marker_kwargs:
    # marker: o
    # ms: 0.7
    linewidth: 0.5
  structure:
  - x_axis: [fitTimestamp]
    y_axis: [fitZ.pax]
    legend: [fitted]
    x_label: "$t [s]$"
    y_label: "$\\ddot x [m/s^2]$"
  - x_axis: [fitTimestamp]
    y_axis: [fitZ.pay]
    legend: [fitted]
    x_label: "$t [s]$"
    y_label: "$\\ddot y [m/s^2]$"
  - x_axis: [fitTimestamp]
    y_axis: [fitZ.paz]
    legend: [fitted]
    x_label: "$t [s]$"
    y_label: "$\\ddot z [m/s^2]$"
- title: Thrust
  type: 2d subplots
  marker: line
  marker_kwargs:
    linewidth: 0.5
  structure:
  - x_axis: [timestamp]
    y_axis: [ctrlLee.thrustSI]
    legend: [actual]
    x_label: "$t [s]$"
    y_label: "$T [N]$"
- title: Torques (xyz)
  type: 2d subplots
  marker: line
  marker_kwargs:
    linewidth: 0.5
  structure:
  - x_axis: [timestamp]
    y_axis: [ctrlLee.torquex]
    legend: [actual]
    x_label: "$t [s]$"
    y_label: "$\\tau_x [Nm]$"
  - x_axis: [timestamp]
    y_axis: [ctrlLee.torquey]
    legend: [actual]
    x_label: "$t [s]$"
    y_label: "$\\tau_y [Nm]$"
  - x_axis: [timestamp]
    y_axis: [ctrlLee.torquez]
    legend: [actual]
    x_label: "$t [s]$"
    y_label: "$\\tau_z [Nm]$"
- title: Trajectory
  type: 3d
  marker: line
  marker_kwargs:
    linewidth: 0.5
  x_label: $x [m]$
  y_label: $y [m]$
  z_label: $z [m]$
  structure:
  - - stateEstimateZ.x
    - stateEstimateZ.y
    - stateEstimateZ.z
    - ekf
  - - ctrltargetZ.x
    - ctrltargetZ.y
    - ctrltargetZ.z
    - desired
- title: Trajectory
  type: 2d subplots
  marker: line
  marker_kwargs:
    linewidth: 0.5
  structure:
  - x_axis: [stateEstimateZ.x, ctrltargetZ.x]
    y_axis: [stateEstimateZ.y, ctrltargetZ.y]
    legend: [ekf, desired]
    x_label: "$x [m]$"
    y_label: "$y [m]$"

# unit settings
convert_units:
  timestamp: 0.001
  stateEstimateZ.x: 0.001
  stateEstimateZ.y: 0.001
  stateEstimateZ.z: 0.001
  stateEstimateZ.vx: 0.001
  stateEstimateZ.vy: 0.001
  stateEstimateZ.vz: 0.001
  ctrltargetZ.x: 0.001
  ctrltargetZ.y: 0.001
  ctrltargetZ.z: 0.001
  ctrltargetZ.vx: 0.001
  ctrltargetZ.vy: 0.001
  ctrltargetZ.vz: 0.001
  ctrlLee.rpyx: 57.2957795131
  ctrlLee.rpydx: 57.2957795131
  ctrlLee.rpyy: 57.2957795131
  ctrlLee.rpydy: 57.2957795131
  ctrlLee.rpyz: 57.2957795131
  ctrlLee.rpydz: 57.2957795131
  ctrlLee.omegax: 57.2957795131
  ctrlLee.omegarx: 57.2957795131
  ctrlLee.omegay: 57.2957795131
  ctrlLee.omegary: 57.2957795131
  ctrlLee.omegaz: 57.2957795131
  ctrlLee.omegarz: 57.2957795131
  acc.x: 1.0
  acc.y: 1.0
  acc.z: 1.0
  stateEstimateZ.px: 0.001
  stateEstimateZ.py: 0.001
  stateEstimateZ.pz: 0.001
  stateEstimateZ.pvx: 0.001
  stateEstimateZ.pvy: 0.001
  stateEstimateZ.pvz: 0.001
  locSrv.x: 1.0
  locSrv.y: 1.0
  locSrv.z: 1.0
  locSrv.qx: 1.0
  locSrv.qy: 1.0
  locSrv.qz: 1.0
  locSrv.qw: 1.0
# units:
#   timestamp: s
#   stateEstimateZ.x: m
#   stateEstimateZ.y: m
#   stateEstimateZ.z: m
#   stateEstimateZ.vx: m/s
#   stateEstimateZ.vy: m/s
#   stateEstimateZ.vz: m/s
#   ctrltargetZ.x: m
#   ctrltargetZ.y: m
#   ctrltargetZ.z: m
#   ctrltargetZ.vx: m/s
#   ctrltargetZ.vy: m/s
#   ctrltargetZ.vz: m/s
#   ctrlLee.rpyx: °
#   ctrlLee.rpyy: °
#   ctrlLee.rpyz: °
#   ctrlLee.rpydx: °
#   ctrlLee.rpydy: °
#   ctrlLee.rpydz: °
#   ctrlLee.omegax: °/s
#   ctrlLee.omegay: °/s
#   ctrlLee.omegaz: °/s
#   ctrlLee.omegarx: °/s
#   ctrlLee.omegary: °/s
#   ctrlLee.omegarz: °/s
#   ctrlLee.thrustSI: N
#   ctrlLee.torquex: Nm
#   ctrlLee.torquey: Nm
#   ctrlLee.torquez: Nm
#   acc.x: m/s^2
#   acc.y: m/s^2
#   acc.z: m/s^2
#   stateEstimate.px: m
#   stateEstimate.py: m
#   stateEstimate.pz: m
#   stateEstimate.pvx: m/s
#   stateEstimate.pvy: m/s
#   stateEstimate.pvz: m/s
#   locSrv.x: m
#   locSrv.y: m
#   locSrv.z: m
#   locSrv.qx: 
#   locSrv.qy: 
#   locSrv.qz: 
#   locSrv.qw: 

# info for adding additional data (fmi: model.py)
# (1) type: linspace  -> takes data and returns data with more points in between (needs step)
# (2) type: poly      -> takes data and returns data of a fitted polynomial, or its derivative (needs derivative, degree)
# (3) type: cs        -> takes data and returns data of a cubic spline, or its derivative (needs derivative)
# (4) type: bs        -> takes data and returns data of a b-spline, or its derivative (needs derivative, smoothing)
additional_data:
  - source: timestamp
    target: fitTimestamp
    type: linspace
    step: 0.0001
  - source: stateEstimateZ.px
    target: fitZ.px
    type: bs
    smoothing: 1
    # degree:
    derivative: 0
  - source: stateEstimateZ.py
    target: fitZ.py
    type: bs
    smoothing: 1
    # degree:
    derivative: 0
  - source: stateEstimateZ.pz
    target: fitZ.pz
    type: bs
    smoothing: 1
    # degree:
    derivative: 0
  - source: stateEstimateZ.px
    target: fitZ.pvx
    type: bs
    smoothing: 1
    # degree:
    derivative: 1
  - source: stateEstimateZ.py
    target: fitZ.pvy
    type: bs
    smoothing: 1
    # degree:
    derivative: 1
  - source: stateEstimateZ.pz
    target: fitZ.pvz
    type: bs
    smoothing: 1
    # degree:
    derivative: 1
  - source: stateEstimateZ.px
    target: fitZ.pax
    type: bs
    smoothing: 1
    # degree:
    derivative: 2
  - source: stateEstimateZ.py
    target: fitZ.pay
    type: bs
    smoothing: 1
    # degree:
    derivative: 2
  - source: stateEstimateZ.pz
    target: fitZ.paz
    type: bs
    smoothing: 1
    # degree:
    derivative: 2
  
  

